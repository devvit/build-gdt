diff --git a/gddragonbones.cpp b/gddragonbones.cpp
index a995f6d..2d2ea71 100644
--- a/gddragonbones.cpp
+++ b/gddragonbones.cpp
@@ -1031,7 +1031,7 @@ void GDDragonBones::_bind_methods()
 	ADD_PROPERTY(PropertyInfo(REAL_VARIANT, "playback/progress", PROPERTY_HINT_RANGE, "-100,100,0.010"), _SCS("seek"), _SCS("get_progress"));
     ADD_PROPERTY(PropertyInfo(Variant::BOOL, "playback/play"), _SCS("play"), _SCS("is_playing"));
 
-    ADD_PROPERTY(PropertyInfo(Variant::BOOL, "childs use this material"), _SCS("set_inherit_material"), _SCS("is_material_inherited"));
+    ADD_PROPERTY(PropertyInfo(Variant::BOOL, "childs_use_this_material"), _SCS("set_inherit_material"), _SCS("is_material_inherited"));
 
     ADD_SIGNAL(MethodInfo("dragon_anim_start", PropertyInfo(Variant::STRING, "anim")));
     ADD_SIGNAL(MethodInfo("dragon_anim_complete", PropertyInfo(Variant::STRING, "anim")));
diff --git a/register_types.cpp b/register_types.cpp
index 87f1be3..55b2d85 100644
--- a/register_types.cpp
+++ b/register_types.cpp
@@ -31,7 +31,7 @@ public:
 #if (VERSION_MAJOR >=4)
 	virtual RES load(const String &p_path, const String &p_original_path, Error *r_error, bool p_use_sub_threads, float *r_progress, bool p_no_cache) {
 #else
-	virtual RES load(const String &p_path, const String &p_original_path, Error *r_error) {
+	virtual RES load(const String &p_path, const String &p_original_path, Error *r_error, bool p_no_subresource_cache = false) {
 #endif
 		float __tm_start = OS::get_singleton()->get_ticks_msec();
 		GDDragonBones::GDDragonBonesResource* __p_res = memnew(GDDragonBones::GDDragonBonesResource);
@@ -108,6 +108,8 @@ void register_godot_dragonbones_types()
 	REG_VIRTUAL_CLASS_BIND_GODO<GDArmatureDisplay>();
 	REG_VIRTUAL_CLASS_BIND_GODO<GDSlot>();
 	REG_VIRTUAL_CLASS_BIND_GODO<GDBone2D>();
+	REG_VIRTUAL_CLASS_BIND_GODO<GDDisplay>();
+	REG_VIRTUAL_CLASS_BIND_GODO<GDOwnerNode>();
     REG_CLASS_BIND_GODO<GDDragonBones::GDDragonBonesResource>();
 
 	resource_loader_GDDragonBones.instance();
diff --git a/src/GDArmatureDisplay.cpp b/src/GDArmatureDisplay.cpp
index c729ff2..781b382 100644
--- a/src/GDArmatureDisplay.cpp
+++ b/src/GDArmatureDisplay.cpp
@@ -47,15 +47,15 @@ void GDArmatureDisplay::_bind_methods() {
 
 
 	// Enum
-	BIND_CONSTANT(ANIMATION_PROCESS_FIXED);
-	BIND_CONSTANT(ANIMATION_PROCESS_IDLE);
-
-	BIND_CONSTANT(FadeOut_None);
-	BIND_CONSTANT(FadeOut_SameLayer);
-	BIND_CONSTANT(FadeOut_SameGroup);
-	BIND_CONSTANT(FadeOut_SameLayerAndGroup);
-	BIND_CONSTANT(FadeOut_All);
-	BIND_CONSTANT(FadeOut_Single);
+	BIND_ENUM_CONSTANT(ANIMATION_PROCESS_FIXED);
+	BIND_ENUM_CONSTANT(ANIMATION_PROCESS_IDLE);
+
+	BIND_ENUM_CONSTANT(FadeOut_None);
+	BIND_ENUM_CONSTANT(FadeOut_SameLayer);
+	BIND_ENUM_CONSTANT(FadeOut_SameGroup);
+	BIND_ENUM_CONSTANT(FadeOut_SameLayerAndGroup);
+	BIND_ENUM_CONSTANT(FadeOut_All);
+	BIND_ENUM_CONSTANT(FadeOut_Single);
 }
 
 bool GDArmatureDisplay::is_frozen() {
